version: '3.8'

services:

  grafana:
    image: grafana/grafana:8.3.0
    hostname: grafana
    networks:
      - metrics_net
      - public
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.role == manager"
          - "node.hostname == main-1"
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.2'
          memory: 256M
      labels:
        - "traefik.enable=true"
        # Router
        - "traefik.http.routers.grafana.rule=Host(`admin.silkky.cloud`) && PathPrefix(`/grafana/`)"
        - "traefik.http.routers.grafana.entrypoints=websecure"
        - "traefik.http.routers.grafana.middleware=authentik-proxy@docker"
        - "traefik.http.routers.grafana.service=grafana-service"
        # Service
        - "traefik.http.services.portainer-service.loadbalancer.server.port=3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana:/etc/grafana

  prometheus:
    image: quay.io/prometheus/prometheus:v2.31.1
    command: 
      - --web.enable-lifecycle 
      - --web.external-url=/prometheus/ 
      - --config.file=/etc/prometheus/prometheus.yml
    hostname: prometheus
    networks:
      - socat_net
      - metrics_net
      - public
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.role == manager"
          - "node.hostname == main-1"
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.2'
          memory: 256M;
      labels:
        - "traefik.enable=true"
        # Router
        - "traefik.http.routers.prometheus.rule=Host(`admin.silkky.cloud`) && PathPrefix(`/prometheus/`)"
        - "traefik.http.routers.prometheus.entrypoints=websecure"
        - "traefik.http.routers.prometheus.middleware=authentik-proxy@docker"
        - "traefik.http.routers.prometheus.service=prometheus-service"
        # Service
        - "traefik.http.services.prometheus-service.loadbalancer.server.port=9090"
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus:/etc/prometheus

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    command:
      - '--path.procfs=/host/proc'       
      - '--path.sysfs=/host/sys'       
      - '--path.rootfs=/host'   
    hostname: node-exporter
    networks:
      - metrics_net
    deploy:
      mode: global
      placement:
        constraints:
          - "node.platform.os == linux"
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.2'
          memory: 50M
      labels:
        - prometheus-job=node-exporter
        - prometheus-port=9100
        - prometheus-path=/metrics
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro       
      - /:/rootfs:ro   

  dockersocat:
    image: ghcr.io/tecnativa/docker-socket-proxy:0.1
    networks:
      - socat_net
    logging:
      driver: none
    deploy:
      mode: global
      placement:
        constraints:
          - "node.role == manager"
      resources:
        reservations:
          memory: 5M
          cpus: '0.05'
        limits:
          memory: 25M
          cpus: '0.1'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - NODES=1
      - NETWORKS=1
      - SERVICES=1
      - TASKS=1

networks:
  public: 
    external: true
  metrics_net:
    external: true
  socat_net:
    driver: overlay
    internal: true
    driver_opts:
      encrypted: "true"
      com.docker.network.driver.mtu: 1450

volumes:
  prometheus_data:
  grafana_data: