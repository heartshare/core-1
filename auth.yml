version: '3.8'

services:

  authentik:
    image: ghcr.io/goauthentik/server:2021.10.4
    command: server
    hostname: authentik
    networks:
      - backend
      - public
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.hostname == main-1"
      update_config:
        failure_action: rollback
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.1'
          memory: 1G
      labels:
        - "traefik.enable=true"
        # Router
        - "traefik.http.routers.authentik.rule=Host(`admin.silkky.cloud`)"
        - "traefik.http.routers.authentik.entrypoints=websecure"
        - "traefik.http.routers.authentik.tls=true"
        - "traefik.http.routers.authentik.middlewares=authentik-headers"
        - "traefik.http.routers.authentik.service=authentik-service"
        # Service
        - "traefik.http.services.authentik-service.loadbalancer.server.port=9000"
        # Headers
        - "traefik.http.middlewares.authentik-headers.headers.customRequestHeaders.X-Forwarded-Proto=https"
    env_file:
      - auth-authentik.env
    volumes:
      - authentik_media:/media
    secrets:
      - source: authentik-secret-key
        target: secret.key
        uid: "1000"
        gid: "1000"
        mode: 0600
      # Mailer credentials
      - source: mailgun-noreply-password
        target: mailer-password.key
        uid: "1000"
        gid: "1000"
        mode: 0600

  authentik_proxy:
    image: ghcr.io/goauthentik/proxy:2021.10.4
    hostname: authentik-proxy
    networks:
      - backend
      - public
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        failure_action: rollback
      resources:
        limits:
          cpus: '0.3'
          memory: 200M
        reservations:
          cpus: '0.05'
          memory: 50M
      labels:
        - "traefik.enable=true"
        # Router
        - "traefik.http.routers.authentik-proxy.rule=Host(`admin.silkky.cloud`) && PathPrefix(`/akprox/`)"
        - "traefik.http.routers.authentik-proxy.entrypoints=websecure"
        - "traefik.http.routers.authentik-proxy.tls=true"
        - "traefik.http.routers.authentik-proxy.service=authentik-proxy-service"
        # Service
        - "traefik.http.services.authentik-proxy-service.loadbalancer.server.port=9000"
        # Authentik auth middleware
        - "traefik.http.middlewares.authentik-auth.forwardauth.address=http://authentik-proxy:9000/akprox/auth/traefik"
        - "traefik.http.middlewares.authentik-auth.forwardauth.trustForwardHeader=true"
        - "traefik.http.middlewares.authentik-auth.forwardauth.authResponseHeadersRegex=^.*$"
    env_file:
      - auth-authentik-proxy.env

  postgresql:
    image: postgres:14-alpine
    hostname: postgresql
    networks:
      - backend
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.hostname == main-1"
      resources:
        limits:
          cpus: '0.5'
          memory: 4G
        reservations:
          cpus: '0.2'
          memory: 512M
    volumes:
      - database:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - auth-database.env

  redis:
    image: redis:6.2.6-alpine
    hostname: redis
    networks:
      - backend
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.hostname == main-1"
      update_config:
        failure_action: rollback
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.05'
          memory: 50M
    volumes:
      - redis_database:/data

networks:
  public:
    external: true
  backend:
    driver: overlay
    internal: true
    driver_opts:
      encrypted: "true"
      com.docker.network.driver.mtu: 1450

volumes:
  authentik_media:
  database:
  redis_database:

secrets:
  authentik-secret-key:
    external: true
  mailgun-noreply-password:
    external: true