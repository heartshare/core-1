version: '3.8'

services:

  grafana:
    image: grafana/grafana:8.2.3
    hostname: grafana
    networks:
      - metrics_net
      - public
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.role == manager"
          - "node.hostname == main-1"
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G
    volumes:
      - grafana_data:/var/lib/grafana
      - ./Grafana:/etc/grafana

  prometheus:
    image: quay.io/prometheus/prometheus:v2.31.1
    command: --web.enable-lifecycle --web.external-url=/prometheus/ --config.file=/etc/prometheus/prometheus.yml
    hostname: prometheus
    networks:
      - metrics_net
      - public
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.role == manager"
          - "node.hostname == main-1"
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M
    volumes:
      - prometheus_data:/prometheus
      - ./Prometheus:/etc/prometheus
      # Needed to discover targets in Swarm cluster
      - /var/run/docker.sock:/var/run/docker.sock:ro

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    hostname: cadvisor
    networks:
      - metrics_net
    deploy:
      mode: global
      placement:
        constraints:
          - "node.platform.os == linux"
          - "node.role == manager"
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

networks:
  public: 
    external: true

  metrics_net:
    driver: overlay

volumes:
  prometheus_data:
  grafana_data: